---

- name: Set variables used by the role
  # https://ansible.readthedocs.io/projects/lint/rules/var-naming/#settings
  set_fact:
    slurm_os_dir: /opt/slurm/{{ cluster_name }}

- name: Show vars used in this playbook
  debug:
    msg: |
      architecture:               {{ architecture }}
      cluster_name:               {{ cluster_name }}
      default_partition:          {{ default_partition }}
      distribution:               {{ distribution }}
      distribution_major_version: {{ distribution_major_version }}
      parallel_cluster_version:   {{ parallel_cluster_version }}
      pc_modulefiles_base_dir:    {{ pc_modulefiles_base_dir }}
      slurm_config_dir:           {{ slurm_config_dir }}
      slurm_os_dir:               {{ slurm_os_dir }}

- name: Create /opt/slurm/{{ cluster_name }} symbolic link
  # All head nodes are originally configured to use /opt/slurm
  # This doesn't work for submitter nodes that need to access more than one cluster because they can't all be mounted at /opt/slurm.
  # So create a path, /opt/slurm/{{ cluster_name }} that can exist both on the Head node and the submitter node
  file:
    path: "/opt/slurm/{{ cluster_name }}"
    src:  "/opt/slurm"
    state: link
    owner: root
    group: root
    mode: '0775'

- name: Change /opt/slurm to /opt/slurm/{{ cluster_name }} in slurm.conf
  shell:
    cmd: |
      set -ex

      conf_files=$(find /opt/slurm -name '*.conf')
      backup_suffix=".$(date '+%Y-%m-%dT%H:%M:%S')~"
      num_changed=0
      for conf_file in ${conf_files[*]}; do
          sed --in-place=$backup_suffix 's%/opt/slurm/etc%/opt/slurm/{{ cluster_name }}/etc%' $conf_file
          sed --in-place=$backup_suffix 's%/opt/slurm/lib%/opt/slurm/{{ cluster_name }}/lib%' $conf_file

          backup_conf_file="${conf_file}${backup_suffix}"
          if diff -q $backup_conf_file $conf_file; then
              rm -f $backup_conf_file
          else
              num_changed=$((num_changed + 1))
          fi
      done
      if [[ $num_changed -gt 0 ]]; then
          echo "$num_changed files changed. Need to restart slurmd and slurmctld."
          systemctl restart slurmd || true
          systemctl restart slurmctld
      else
          echo "No conf files changed."
      fi

- name: Fix permissions on config dir so users can access it to get the modulefiles
  file:
    path: "{{ slurm_config_dir }}"
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Create {{ pc_modulefiles_base_dir }}
  file:
    path: "{{ pc_modulefiles_base_dir }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  register: create_modulefile_dir_result

# - name: Create {{ pc_modulefiles_base_dir }}/{{ distribution }}/{{ distribution_major_version }}/{{ architecture }}/{{ cluster_name }}
#   file:
#     path: "{{ pc_modulefiles_base_dir }}/{{ distribution }}/{{ distribution_major_version }}/{{ architecture }}/{{ cluster_name }}"
#     state: directory
#     owner: root
#     group: root
#     mode: '0755'
#   register: create_modulefile_dir_result

- name: Fix modulefile permissions
  when: create_modulefile_dir_result
  shell:
    cmd: |
      set -ex

      chmod -R 0755 /opt/slurm/config/modules

# - name: Create slurm modulefile .template
#   template:
#     dest: "{{ pc_modulefiles_base_dir }}/{{ distribution }}/{{ distribution_major_version }}/{{ architecture }}/{{ cluster_name }}/.template"
#     src:  opt/slurm/modules/modulefiles/slurm/.template
#     owner: root
#     group: root
#     mode: '0664'
#     force: yes

# - name: Create slurm modulefile
#   file:
#     path: "{{ pc_modulefiles_base_dir }}/{{ distribution }}/{{ distribution_major_version }}/{{ architecture }}/{{ cluster_name }}/{{ parallel_cluster_version }}"
#     src:  ".template"
#     state: link
#     owner: root
#     group: root
#     mode: '0664'

# - name: Create slurm modulefile .version
#   template:
#     dest: "{{ pc_modulefiles_base_dir }}/{{ distribution }}/{{ distribution_major_version }}/{{ architecture }}/{{ cluster_name }}/.version"
#     src:   opt/slurm/modules/modulefiles/slurm/.version
#     owner: root
#     group: root
#     mode: '0664'
#     force: yes
